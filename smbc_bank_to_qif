#! /usr/bin/python2.7

# This script takes a CSV file manually downloaded from Sumitomo-Mitsui Bank
# web site (https://direct.smbc.co.jp/aib/aibgsjsw5001.jsp), converts it to
# Unicode, and rearranges it into QIF format.
#
# Run this on the CSV that the web site provides, and not the OFX file.
# iBank honors the time zone offset field, but does not itself have an internal
# timezone, so Japanese users of iBank will see their transactions shifted a day
# if the OFX file is used.

import csv
import os
import unicodedata
import sys
import re
import time
from datetime import date
from datetime import datetime

print '!Type:Bank'

with open( sys.argv[1], 'rb') as csvfile:
	rows = csv.reader(csvfile, delimiter=',')
	next(rows, None)

	for row in rows:
	  if not row:
	    break
	  year, month, day = row[0].split('.')
	  year = (int(year[1:3])) + 1988
	  trans_date = date(int(year), int(month), int(day))
	  payee = row[3].decode('shift-jis').encode('utf-8')
	  payee = unicodedata.normalize('NFKC', payee.decode('utf8'))
	  payee = re.sub("\s\s+", " ", payee)
	  if row[1]:
	    amount = -(int(row[1]))
	  else:
	    amount = int(row[2])
	  comment = row[4]

   	  print 'D' + trans_date.strftime('%Y/%m/%d')
	  print 'T' + str(amount)
	  print 'Cc'
	  print 'P' + payee.encode('UTF-8')
	  print 'M' + comment.encode('UTF-8')
	  print '^'

